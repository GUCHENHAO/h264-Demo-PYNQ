// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="color_convert,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.380000,HLS_SYN_LAT=7,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=9,HLS_SYN_FF=715,HLS_SYN_LUT=607}" *)

module color_convert (
        ap_clk,
        ap_rst_n,
        in_data_TDATA,
        in_data_TVALID,
        in_data_TREADY,
        in_data_TUSER,
        in_data_TLAST,
        out_data_TDATA,
        out_data_TVALID,
        out_data_TREADY,
        out_data_TUSER,
        out_data_TLAST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        control,
        ap_rst_n_control
);

parameter    ap_ST_pp0_stg0_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv8_FF = 8'b11111111;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
input  [23:0] in_data_TDATA;
input   in_data_TVALID;
output   in_data_TREADY;
input  [0:0] in_data_TUSER;
input  [0:0] in_data_TLAST;
output  [23:0] out_data_TDATA;
output   out_data_TVALID;
input   out_data_TREADY;
output  [0:0] out_data_TUSER;
output  [0:0] out_data_TLAST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   control;
input   ap_rst_n_control;

reg in_data_TREADY;
reg out_data_TVALID;

reg    ap_rst_n_inv;
wire   [9:0] c1_c1_V;
reg   [9:0] c1_c1_V_0_data_reg;
reg    c1_c1_V_0_vld_reg;
reg    c1_c1_V_0_ack_out;
wire   [9:0] c1_c2_V;
reg   [9:0] c1_c2_V_0_data_reg;
reg    c1_c2_V_0_vld_reg;
reg    c1_c2_V_0_ack_out;
wire   [9:0] c1_c3_V;
reg   [9:0] c1_c3_V_0_data_reg;
reg    c1_c3_V_0_vld_reg;
reg    c1_c3_V_0_ack_out;
wire   [9:0] c2_c1_V;
reg   [9:0] c2_c1_V_0_data_reg;
reg    c2_c1_V_0_vld_reg;
reg    c2_c1_V_0_ack_out;
wire   [9:0] c2_c2_V;
reg   [9:0] c2_c2_V_0_data_reg;
reg    c2_c2_V_0_vld_reg;
reg    c2_c2_V_0_ack_out;
wire   [9:0] c2_c3_V;
reg   [9:0] c2_c3_V_0_data_reg;
reg    c2_c3_V_0_vld_reg;
reg    c2_c3_V_0_ack_out;
wire   [9:0] c3_c1_V;
reg   [9:0] c3_c1_V_0_data_reg;
reg    c3_c1_V_0_vld_reg;
reg    c3_c1_V_0_ack_out;
wire   [9:0] c3_c2_V;
reg   [9:0] c3_c2_V_0_data_reg;
reg    c3_c2_V_0_vld_reg;
reg    c3_c2_V_0_ack_out;
wire   [9:0] c3_c3_V;
reg   [9:0] c3_c3_V_0_data_reg;
reg    c3_c3_V_0_vld_reg;
reg    c3_c3_V_0_ack_out;
wire   [9:0] bias_c1_V;
reg   [9:0] bias_c1_V_0_data_reg;
reg    bias_c1_V_0_vld_reg;
reg    bias_c1_V_0_ack_out;
wire   [9:0] bias_c2_V;
reg   [9:0] bias_c2_V_0_data_reg;
reg    bias_c2_V_0_vld_reg;
reg    bias_c2_V_0_ack_out;
wire   [9:0] bias_c3_V;
reg   [9:0] bias_c3_V_0_data_reg;
reg    bias_c3_V_0_vld_reg;
reg    bias_c3_V_0_ack_out;
reg    in_data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_293;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg    ap_reg_ppiten_pp0_it4;
reg    ap_reg_ppiten_pp0_it5;
reg    ap_reg_ppiten_pp0_it6;
reg    ap_reg_ppiten_pp0_it7;
reg    out_data_TDATA_blk_n;
reg    ap_rst_n_control_inv;
reg   [0:0] out_data_user_V_tmp_reg_899;
reg    ap_sig_ioackin_out_data_TREADY;
reg   [0:0] ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter1;
reg   [0:0] ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter2;
reg   [0:0] ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter3;
reg   [0:0] ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter4;
reg   [0:0] ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter5;
reg   [0:0] ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter6;
reg   [0:0] out_data_last_V_tmp_reg_904;
reg   [0:0] ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter1;
reg   [0:0] ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter2;
reg   [0:0] ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter3;
reg   [0:0] ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter4;
reg   [0:0] ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter5;
reg   [0:0] ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter6;
wire   [7:0] loc_V_fu_213_p1;
reg   [7:0] loc_V_reg_909;
reg   [7:0] ap_reg_ppstg_loc_V_reg_909_pp0_iter1;
reg   [7:0] ap_reg_ppstg_loc_V_reg_909_pp0_iter2;
reg   [7:0] ap_reg_ppstg_loc_V_reg_909_pp0_iter3;
reg   [7:0] loc_V_1_reg_914;
reg   [7:0] ap_reg_ppstg_loc_V_1_reg_914_pp0_iter1;
reg   [7:0] loc_V_2_reg_919;
reg   [7:0] ap_reg_ppstg_loc_V_2_reg_919_pp0_iter1;
reg   [7:0] ap_reg_ppstg_loc_V_2_reg_919_pp0_iter2;
reg   [7:0] ap_reg_ppstg_loc_V_2_reg_919_pp0_iter3;
reg   [7:0] ap_reg_ppstg_loc_V_2_reg_919_pp0_iter4;
reg   [9:0] bias_c3_V_read_reg_924;
reg   [9:0] ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter2;
reg   [9:0] ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter3;
reg   [9:0] ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter4;
reg   [9:0] ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter5;
reg   [9:0] bias_c2_V_read_reg_929;
reg   [9:0] ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter2;
reg   [9:0] ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter3;
reg   [9:0] ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter4;
reg   [9:0] ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter5;
reg   [9:0] bias_c1_V_read_reg_934;
reg   [9:0] ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter2;
reg   [9:0] ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter3;
reg   [9:0] ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter4;
reg   [9:0] ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter5;
reg   [9:0] c3_c3_V_read_reg_939;
reg   [9:0] ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter2;
reg   [9:0] ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter3;
reg  signed [9:0] ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter4;
reg  signed [9:0] c3_c2_V_read_reg_944;
reg   [9:0] c3_c1_V_read_reg_949;
reg   [9:0] ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter2;
reg  signed [9:0] ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter3;
reg   [9:0] c2_c3_V_read_reg_954;
reg   [9:0] ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter2;
reg   [9:0] ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter3;
reg  signed [9:0] ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter4;
reg  signed [9:0] c2_c2_V_read_reg_959;
reg   [9:0] c2_c1_V_read_reg_964;
reg   [9:0] ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter2;
reg  signed [9:0] ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter3;
reg   [9:0] c1_c3_V_read_reg_969;
reg   [9:0] ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter2;
reg   [9:0] ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter3;
reg  signed [9:0] ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter4;
reg  signed [9:0] c1_c2_V_read_reg_974;
reg   [9:0] c1_c1_V_read_reg_979;
reg   [9:0] ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter2;
reg  signed [9:0] ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter3;
wire   [17:0] OP1_V_1_fu_237_p1;
wire   [17:0] grp_fu_243_p2;
reg  signed [17:0] p_Val2_1_reg_1006;
wire   [17:0] grp_fu_252_p2;
reg  signed [17:0] p_Val2_9_reg_1011;
wire   [17:0] grp_fu_261_p2;
reg  signed [17:0] p_Val2_16_reg_1016;
wire  signed [18:0] grp_fu_891_p3;
reg  signed [18:0] p_Val2_2_reg_1021;
wire  signed [18:0] grp_fu_865_p3;
reg  signed [18:0] p_Val2_11_reg_1026;
wire  signed [18:0] grp_fu_857_p3;
reg  signed [18:0] p_Val2_19_reg_1031;
wire  signed [19:0] grp_fu_873_p3;
reg  signed [19:0] p_Val2_4_reg_1036;
reg   [0:0] tmp_28_reg_1041;
wire  signed [19:0] grp_fu_882_p3;
reg  signed [19:0] p_Val2_12_reg_1046;
reg   [0:0] tmp_32_reg_1051;
wire  signed [19:0] grp_fu_848_p3;
reg  signed [19:0] p_Val2_20_reg_1056;
reg   [0:0] tmp_36_reg_1061;
reg   [0:0] signbit_reg_1066;
wire   [7:0] p_Val2_7_fu_375_p2;
reg   [7:0] p_Val2_7_reg_1073;
wire   [0:0] carry_fu_395_p2;
reg   [0:0] carry_reg_1079;
wire   [0:0] Range1_all_ones_fu_411_p2;
reg   [0:0] Range1_all_ones_reg_1085;
wire   [0:0] Range1_all_zeros_fu_417_p2;
reg   [0:0] Range1_all_zeros_reg_1091;
reg   [0:0] signbit_1_reg_1096;
wire   [7:0] p_Val2_15_fu_468_p2;
reg   [7:0] p_Val2_15_reg_1103;
wire   [0:0] carry_1_fu_488_p2;
reg   [0:0] carry_1_reg_1109;
wire   [0:0] Range1_all_ones_1_fu_504_p2;
reg   [0:0] Range1_all_ones_1_reg_1115;
wire   [0:0] Range1_all_zeros_1_fu_510_p2;
reg   [0:0] Range1_all_zeros_1_reg_1121;
reg   [0:0] signbit_2_reg_1126;
wire   [7:0] p_Val2_23_fu_561_p2;
reg   [7:0] p_Val2_23_reg_1133;
wire   [0:0] carry_2_fu_581_p2;
reg   [0:0] carry_2_reg_1139;
wire   [0:0] Range1_all_ones_2_fu_597_p2;
reg   [0:0] Range1_all_ones_2_reg_1145;
wire   [0:0] Range1_all_zeros_2_fu_603_p2;
reg   [0:0] Range1_all_zeros_2_reg_1151;
reg    ap_reg_ioackin_out_data_TREADY;
wire   [7:0] grp_fu_243_p0;
wire   [7:0] grp_fu_252_p0;
wire   [7:0] grp_fu_261_p0;
wire   [17:0] tmp_3_fu_330_p3;
wire  signed [19:0] tmp_3_cast_fu_337_p1;
(* use_dsp48 = "no" *) wire   [19:0] p_Val2_5_fu_341_p2;
wire   [7:0] tmp_7_fu_364_p1;
wire   [7:0] p_Val2_6_fu_354_p4;
wire   [0:0] tmp_30_fu_381_p3;
wire   [0:0] tmp_29_fu_367_p3;
wire   [0:0] tmp_5_fu_389_p2;
wire   [3:0] tmp_2_fu_401_p4;
wire   [17:0] tmp_12_fu_423_p3;
wire  signed [19:0] tmp_16_cast_fu_430_p1;
(* use_dsp48 = "no" *) wire   [19:0] p_Val2_13_fu_434_p2;
wire   [7:0] tmp_13_fu_457_p1;
wire   [7:0] p_Val2_14_fu_447_p4;
wire   [0:0] tmp_34_fu_474_p3;
wire   [0:0] tmp_33_fu_460_p3;
wire   [0:0] tmp_14_fu_482_p2;
wire   [3:0] tmp_15_fu_494_p4;
wire   [17:0] tmp_21_fu_516_p3;
wire  signed [19:0] tmp_27_cast_fu_523_p1;
(* use_dsp48 = "no" *) wire   [19:0] p_Val2_21_fu_527_p2;
wire   [7:0] tmp_22_fu_550_p1;
wire   [7:0] p_Val2_22_fu_540_p4;
wire   [0:0] tmp_38_fu_567_p3;
wire   [0:0] tmp_37_fu_553_p3;
wire   [0:0] tmp_23_fu_575_p2;
wire   [3:0] tmp_24_fu_587_p4;
wire   [0:0] p_38_i_fu_614_p2;
wire   [0:0] tmp_8_fu_618_p2;
wire   [0:0] deleted_zeros_fu_609_p3;
wire   [0:0] signbit_not_fu_634_p2;
wire   [0:0] p_39_demorgan_i_fu_629_p2;
wire   [0:0] neg_src_5_not_fu_639_p2;
wire   [0:0] p_39_demorgan_i_not_fu_651_p2;
wire   [0:0] brmerge_i_i_not_fu_645_p2;
wire   [0:0] neg_src_fu_624_p2;
wire   [0:0] brmerge_fu_657_p2;
wire   [7:0] p_mux_fu_663_p3;
wire   [7:0] p_s_fu_670_p3;
wire   [0:0] p_38_i1_fu_690_p2;
wire   [0:0] tmp_16_fu_694_p2;
wire   [0:0] deleted_zeros_1_fu_685_p3;
wire   [0:0] signbit_1_not_fu_710_p2;
wire   [0:0] p_39_demorgan_i1_fu_705_p2;
wire   [0:0] neg_src_not_fu_715_p2;
wire   [0:0] p_39_demorgan_i464_not_fu_727_p2;
wire   [0:0] brmerge_i_i466_not_fu_721_p2;
wire   [0:0] neg_src_6_fu_700_p2;
wire   [0:0] brmerge1_fu_733_p2;
wire   [7:0] p_mux1_fu_739_p3;
wire   [7:0] p_1_fu_746_p3;
wire   [0:0] p_38_i2_fu_766_p2;
wire   [0:0] tmp_25_fu_770_p2;
wire   [0:0] deleted_zeros_2_fu_761_p3;
wire   [0:0] signbit_2_not_fu_786_p2;
wire   [0:0] p_39_demorgan_i2_fu_781_p2;
wire   [0:0] neg_src_6_not_fu_791_p2;
wire   [0:0] p_39_demorgan_i488_not_fu_803_p2;
wire   [0:0] brmerge_i_i490_not_fu_797_p2;
wire   [0:0] neg_src_7_fu_776_p2;
wire   [0:0] brmerge2_fu_809_p2;
wire   [7:0] p_mux2_fu_815_p3;
wire   [7:0] p_2_fu_822_p3;
wire   [7:0] out3_V_fu_829_p3;
wire   [7:0] out2_V_fu_753_p3;
wire   [7:0] out1_V_fu_677_p3;
wire   [7:0] grp_fu_848_p0;
wire   [17:0] OP1_V_2_fu_288_p1;
wire   [7:0] grp_fu_857_p0;
wire   [17:0] OP1_V_fu_267_p1;
wire   [7:0] grp_fu_865_p0;
wire   [7:0] grp_fu_873_p0;
wire   [7:0] grp_fu_882_p0;
wire   [7:0] grp_fu_891_p0;
reg    grp_fu_243_ce;
reg    grp_fu_252_ce;
reg    grp_fu_261_ce;
reg   [0:0] ap_NS_fsm;
wire    ap_sig_pprstidle_pp0;

// power-on initialization
initial begin
#0 c1_c1_V_0_data_reg = 10'b0000000000;
#0 c1_c1_V_0_vld_reg = 1'b0;
#0 c1_c2_V_0_data_reg = 10'b0000000000;
#0 c1_c2_V_0_vld_reg = 1'b0;
#0 c1_c3_V_0_data_reg = 10'b0000000000;
#0 c1_c3_V_0_vld_reg = 1'b0;
#0 c2_c1_V_0_data_reg = 10'b0000000000;
#0 c2_c1_V_0_vld_reg = 1'b0;
#0 c2_c2_V_0_data_reg = 10'b0000000000;
#0 c2_c2_V_0_vld_reg = 1'b0;
#0 c2_c3_V_0_data_reg = 10'b0000000000;
#0 c2_c3_V_0_vld_reg = 1'b0;
#0 c3_c1_V_0_data_reg = 10'b0000000000;
#0 c3_c1_V_0_vld_reg = 1'b0;
#0 c3_c2_V_0_data_reg = 10'b0000000000;
#0 c3_c2_V_0_vld_reg = 1'b0;
#0 c3_c3_V_0_data_reg = 10'b0000000000;
#0 c3_c3_V_0_vld_reg = 1'b0;
#0 bias_c1_V_0_data_reg = 10'b0000000000;
#0 bias_c1_V_0_vld_reg = 1'b0;
#0 bias_c2_V_0_data_reg = 10'b0000000000;
#0 bias_c2_V_0_vld_reg = 1'b0;
#0 bias_c3_V_0_data_reg = 10'b0000000000;
#0 bias_c3_V_0_vld_reg = 1'b0;
#0 ap_CS_fsm = 1'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
#0 ap_reg_ppiten_pp0_it4 = 1'b0;
#0 ap_reg_ppiten_pp0_it5 = 1'b0;
#0 ap_reg_ppiten_pp0_it6 = 1'b0;
#0 ap_reg_ppiten_pp0_it7 = 1'b0;
#0 ap_reg_ioackin_out_data_TREADY = 1'b0;
end

color_convert_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
color_convert_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .c1_c1_V(c1_c1_V),
    .c1_c2_V(c1_c2_V),
    .c1_c3_V(c1_c3_V),
    .c2_c1_V(c2_c1_V),
    .c2_c2_V(c2_c2_V),
    .c2_c3_V(c2_c3_V),
    .c3_c1_V(c3_c1_V),
    .c3_c2_V(c3_c2_V),
    .c3_c3_V(c3_c3_V),
    .bias_c1_V(bias_c1_V),
    .bias_c2_V(bias_c2_V),
    .bias_c3_V(bias_c3_V),
    .clk(control),
    .rst(ap_rst_n_control_inv)
);

color_convert_mul_8ns_10s_18_2 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
color_convert_mul_8ns_10s_18_2_U0(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_243_p0),
    .din1(c1_c2_V_read_reg_974),
    .ce(grp_fu_243_ce),
    .dout(grp_fu_243_p2)
);

color_convert_mul_8ns_10s_18_2 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
color_convert_mul_8ns_10s_18_2_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_252_p0),
    .din1(c2_c2_V_read_reg_959),
    .ce(grp_fu_252_ce),
    .dout(grp_fu_252_p2)
);

color_convert_mul_8ns_10s_18_2 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 18 ))
color_convert_mul_8ns_10s_18_2_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_261_p0),
    .din1(c3_c2_V_read_reg_944),
    .ce(grp_fu_261_ce),
    .dout(grp_fu_261_p2)
);

color_convert_mac_muladd_8ns_10s_19s_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 20 ))
color_convert_mac_muladd_8ns_10s_19s_20_1_U3(
    .din0(grp_fu_848_p0),
    .din1(ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter4),
    .din2(p_Val2_19_reg_1031),
    .dout(grp_fu_848_p3)
);

color_convert_mac_muladd_8ns_10s_18s_19_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
color_convert_mac_muladd_8ns_10s_18s_19_1_U4(
    .din0(grp_fu_857_p0),
    .din1(ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter3),
    .din2(p_Val2_16_reg_1016),
    .dout(grp_fu_857_p3)
);

color_convert_mac_muladd_8ns_10s_18s_19_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
color_convert_mac_muladd_8ns_10s_18s_19_1_U5(
    .din0(grp_fu_865_p0),
    .din1(ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter3),
    .din2(p_Val2_9_reg_1011),
    .dout(grp_fu_865_p3)
);

color_convert_mac_muladd_8ns_10s_19s_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 20 ))
color_convert_mac_muladd_8ns_10s_19s_20_1_U6(
    .din0(grp_fu_873_p0),
    .din1(ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter4),
    .din2(p_Val2_2_reg_1021),
    .dout(grp_fu_873_p3)
);

color_convert_mac_muladd_8ns_10s_19s_20_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 20 ))
color_convert_mac_muladd_8ns_10s_19s_20_1_U7(
    .din0(grp_fu_882_p0),
    .din1(ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter4),
    .din2(p_Val2_11_reg_1026),
    .dout(grp_fu_882_p3)
);

color_convert_mac_muladd_8ns_10s_18s_19_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
color_convert_mac_muladd_8ns_10s_18s_19_1_U8(
    .din0(grp_fu_891_p0),
    .din1(ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter3),
    .din2(p_Val2_1_reg_1006),
    .dout(grp_fu_891_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_out_data_TREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_reg_ppiten_pp0_it7) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
            ap_reg_ioackin_out_data_TREADY <= 1'b0;
        end else if (((1'b1 == ap_reg_ppiten_pp0_it7) & ~((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) & (1'b1 == out_data_TREADY))) begin
            ap_reg_ioackin_out_data_TREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        if (~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY)))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= 1'b0;
    end else begin
        if (~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY)))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= 1'b0;
    end else begin
        if (~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY)))) begin
            ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= 1'b0;
    end else begin
        if (~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY)))) begin
            ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= 1'b0;
    end else begin
        if (~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY)))) begin
            ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY)))) begin
        Range1_all_ones_1_reg_1115 <= Range1_all_ones_1_fu_504_p2;
        Range1_all_ones_2_reg_1145 <= Range1_all_ones_2_fu_597_p2;
        Range1_all_ones_reg_1085 <= Range1_all_ones_fu_411_p2;
        Range1_all_zeros_1_reg_1121 <= Range1_all_zeros_1_fu_510_p2;
        Range1_all_zeros_2_reg_1151 <= Range1_all_zeros_2_fu_603_p2;
        Range1_all_zeros_reg_1091 <= Range1_all_zeros_fu_417_p2;
        ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter2 <= bias_c1_V_read_reg_934;
        ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter3 <= ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter2;
        ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter4 <= ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter3;
        ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter5 <= ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter4;
        ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter2 <= bias_c2_V_read_reg_929;
        ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter3 <= ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter2;
        ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter4 <= ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter3;
        ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter5 <= ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter4;
        ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter2 <= bias_c3_V_read_reg_924;
        ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter3 <= ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter2;
        ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter4 <= ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter3;
        ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter5 <= ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter4;
        ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter2 <= c1_c1_V_read_reg_979;
        ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter3 <= ap_reg_ppstg_c1_c1_V_read_reg_979_pp0_iter2;
        ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter2 <= c1_c3_V_read_reg_969;
        ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter3 <= ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter2;
        ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter4 <= ap_reg_ppstg_c1_c3_V_read_reg_969_pp0_iter3;
        ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter2 <= c2_c1_V_read_reg_964;
        ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter3 <= ap_reg_ppstg_c2_c1_V_read_reg_964_pp0_iter2;
        ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter2 <= c2_c3_V_read_reg_954;
        ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter3 <= ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter2;
        ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter4 <= ap_reg_ppstg_c2_c3_V_read_reg_954_pp0_iter3;
        ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter2 <= c3_c1_V_read_reg_949;
        ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter3 <= ap_reg_ppstg_c3_c1_V_read_reg_949_pp0_iter2;
        ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter2 <= c3_c3_V_read_reg_939;
        ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter3 <= ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter2;
        ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter4 <= ap_reg_ppstg_c3_c3_V_read_reg_939_pp0_iter3;
        ap_reg_ppstg_loc_V_2_reg_919_pp0_iter2 <= ap_reg_ppstg_loc_V_2_reg_919_pp0_iter1;
        ap_reg_ppstg_loc_V_2_reg_919_pp0_iter3 <= ap_reg_ppstg_loc_V_2_reg_919_pp0_iter2;
        ap_reg_ppstg_loc_V_2_reg_919_pp0_iter4 <= ap_reg_ppstg_loc_V_2_reg_919_pp0_iter3;
        ap_reg_ppstg_loc_V_reg_909_pp0_iter2 <= ap_reg_ppstg_loc_V_reg_909_pp0_iter1;
        ap_reg_ppstg_loc_V_reg_909_pp0_iter3 <= ap_reg_ppstg_loc_V_reg_909_pp0_iter2;
        ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter2 <= ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter1;
        ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter3 <= ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter2;
        ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter4 <= ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter3;
        ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter5 <= ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter4;
        ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter6 <= ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter5;
        ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter2 <= ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter1;
        ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter3 <= ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter2;
        ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter4 <= ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter3;
        ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter5 <= ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter4;
        ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter6 <= ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter5;
        carry_1_reg_1109 <= carry_1_fu_488_p2;
        carry_2_reg_1139 <= carry_2_fu_581_p2;
        carry_reg_1079 <= carry_fu_395_p2;
        p_Val2_15_reg_1103 <= p_Val2_15_fu_468_p2;
        p_Val2_16_reg_1016 <= grp_fu_261_p2;
        p_Val2_1_reg_1006 <= grp_fu_243_p2;
        p_Val2_23_reg_1133 <= p_Val2_23_fu_561_p2;
        p_Val2_7_reg_1073 <= p_Val2_7_fu_375_p2;
        p_Val2_9_reg_1011 <= grp_fu_252_p2;
        signbit_1_reg_1096 <= p_Val2_13_fu_434_p2[ap_const_lv32_13];
        signbit_2_reg_1126 <= p_Val2_21_fu_527_p2[ap_const_lv32_13];
        signbit_reg_1066 <= p_Val2_5_fu_341_p2[ap_const_lv32_13];
        tmp_28_reg_1041 <= grp_fu_873_p3[ap_const_lv32_7];
        tmp_32_reg_1051 <= grp_fu_882_p3[ap_const_lv32_7];
        tmp_36_reg_1061 <= grp_fu_848_p3[ap_const_lv32_7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        ap_reg_ppstg_loc_V_1_reg_914_pp0_iter1 <= loc_V_1_reg_914;
        ap_reg_ppstg_loc_V_2_reg_919_pp0_iter1 <= loc_V_2_reg_919;
        ap_reg_ppstg_loc_V_reg_909_pp0_iter1 <= loc_V_reg_909;
        ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter1 <= out_data_last_V_tmp_reg_904;
        ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter1 <= out_data_user_V_tmp_reg_899;
        bias_c1_V_read_reg_934 <= bias_c1_V_0_data_reg;
        bias_c2_V_read_reg_929 <= bias_c2_V_0_data_reg;
        bias_c3_V_read_reg_924 <= bias_c3_V_0_data_reg;
        c1_c1_V_read_reg_979 <= c1_c1_V_0_data_reg;
        c1_c2_V_read_reg_974 <= c1_c2_V_0_data_reg;
        c1_c3_V_read_reg_969 <= c1_c3_V_0_data_reg;
        c2_c1_V_read_reg_964 <= c2_c1_V_0_data_reg;
        c2_c2_V_read_reg_959 <= c2_c2_V_0_data_reg;
        c2_c3_V_read_reg_954 <= c2_c3_V_0_data_reg;
        c3_c1_V_read_reg_949 <= c3_c1_V_0_data_reg;
        c3_c2_V_read_reg_944 <= c3_c2_V_0_data_reg;
        c3_c3_V_read_reg_939 <= c3_c3_V_0_data_reg;
        loc_V_1_reg_914 <= {{in_data_TDATA[ap_const_lv32_F : ap_const_lv32_8]}};
        loc_V_2_reg_919 <= {{in_data_TDATA[ap_const_lv32_17 : ap_const_lv32_10]}};
        loc_V_reg_909 <= loc_V_fu_213_p1;
        out_data_last_V_tmp_reg_904 <= in_data_TLAST;
        out_data_user_V_tmp_reg_899 <= in_data_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == bias_c1_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == bias_c1_V_0_vld_reg) & (1'b1 == bias_c1_V_0_ack_out)))) begin
        bias_c1_V_0_data_reg <= bias_c1_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == bias_c2_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == bias_c2_V_0_vld_reg) & (1'b1 == bias_c2_V_0_ack_out)))) begin
        bias_c2_V_0_data_reg <= bias_c2_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == bias_c3_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == bias_c3_V_0_vld_reg) & (1'b1 == bias_c3_V_0_ack_out)))) begin
        bias_c3_V_0_data_reg <= bias_c3_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == c1_c1_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == c1_c1_V_0_vld_reg) & (1'b1 == c1_c1_V_0_ack_out)))) begin
        c1_c1_V_0_data_reg <= c1_c1_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == c1_c2_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == c1_c2_V_0_vld_reg) & (1'b1 == c1_c2_V_0_ack_out)))) begin
        c1_c2_V_0_data_reg <= c1_c2_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == c1_c3_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == c1_c3_V_0_vld_reg) & (1'b1 == c1_c3_V_0_ack_out)))) begin
        c1_c3_V_0_data_reg <= c1_c3_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == c2_c1_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == c2_c1_V_0_vld_reg) & (1'b1 == c2_c1_V_0_ack_out)))) begin
        c2_c1_V_0_data_reg <= c2_c1_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == c2_c2_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == c2_c2_V_0_vld_reg) & (1'b1 == c2_c2_V_0_ack_out)))) begin
        c2_c2_V_0_data_reg <= c2_c2_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == c2_c3_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == c2_c3_V_0_vld_reg) & (1'b1 == c2_c3_V_0_ack_out)))) begin
        c2_c3_V_0_data_reg <= c2_c3_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == c3_c1_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == c3_c1_V_0_vld_reg) & (1'b1 == c3_c1_V_0_ack_out)))) begin
        c3_c1_V_0_data_reg <= c3_c1_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == c3_c2_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == c3_c2_V_0_vld_reg) & (1'b1 == c3_c2_V_0_ack_out)))) begin
        c3_c2_V_0_data_reg <= c3_c2_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == 1'b1) & (1'b0 == c3_c3_V_0_vld_reg)) | ((1'b1 == 1'b1) & (1'b1 == c3_c3_V_0_vld_reg) & (1'b1 == c3_c3_V_0_ack_out)))) begin
        c3_c3_V_0_data_reg <= c3_c3_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it4) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        p_Val2_11_reg_1026 <= grp_fu_865_p3;
        p_Val2_19_reg_1031 <= grp_fu_857_p3;
        p_Val2_2_reg_1021 <= grp_fu_891_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it5) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        p_Val2_12_reg_1046 <= grp_fu_882_p3;
        p_Val2_20_reg_1056 <= grp_fu_848_p3;
        p_Val2_4_reg_1036 <= grp_fu_873_p3;
    end
end

always @ (*) begin
    if (ap_sig_293) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_out_data_TREADY)) begin
        ap_sig_ioackin_out_data_TREADY = out_data_TREADY;
    end else begin
        ap_sig_ioackin_out_data_TREADY = 1'b1;
    end
end

assign ap_sig_pprstidle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        bias_c1_V_0_ack_out = 1'b1;
    end else begin
        bias_c1_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        bias_c2_V_0_ack_out = 1'b1;
    end else begin
        bias_c2_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        bias_c3_V_0_ack_out = 1'b1;
    end else begin
        bias_c3_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        c1_c1_V_0_ack_out = 1'b1;
    end else begin
        c1_c1_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        c1_c2_V_0_ack_out = 1'b1;
    end else begin
        c1_c2_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        c1_c3_V_0_ack_out = 1'b1;
    end else begin
        c1_c3_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        c2_c1_V_0_ack_out = 1'b1;
    end else begin
        c2_c1_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        c2_c2_V_0_ack_out = 1'b1;
    end else begin
        c2_c2_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        c2_c3_V_0_ack_out = 1'b1;
    end else begin
        c2_c3_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        c3_c1_V_0_ack_out = 1'b1;
    end else begin
        c3_c1_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        c3_c2_V_0_ack_out = 1'b1;
    end else begin
        c3_c2_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        c3_c3_V_0_ack_out = 1'b1;
    end else begin
        c3_c3_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        grp_fu_243_ce = 1'b1;
    end else begin
        grp_fu_243_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        grp_fu_252_ce = 1'b1;
    end else begin
        grp_fu_252_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        grp_fu_261_ce = 1'b1;
    end else begin
        grp_fu_261_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1))) begin
        in_data_TDATA_blk_n = in_data_TVALID;
    end else begin
        in_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) | ((1'b1 == ap_reg_ppiten_pp0_it7) & (1'b0 == ap_sig_ioackin_out_data_TREADY))))) begin
        in_data_TREADY = 1'b1;
    end else begin
        in_data_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it7)) begin
        out_data_TDATA_blk_n = out_data_TREADY;
    end else begin
        out_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it7) & ~((1'b1 == 1'b1) & (in_data_TVALID == 1'b0)) & (1'b0 == ap_reg_ioackin_out_data_TREADY))) begin
        out_data_TVALID = 1'b1;
    end else begin
        out_data_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_1_fu_237_p1 = ap_reg_ppstg_loc_V_1_reg_914_pp0_iter1;

assign OP1_V_2_fu_288_p1 = ap_reg_ppstg_loc_V_2_reg_919_pp0_iter4;

assign OP1_V_fu_267_p1 = ap_reg_ppstg_loc_V_reg_909_pp0_iter3;

assign Range1_all_ones_1_fu_504_p2 = ((tmp_15_fu_494_p4 == ap_const_lv4_F) ? 1'b1 : 1'b0);

assign Range1_all_ones_2_fu_597_p2 = ((tmp_24_fu_587_p4 == ap_const_lv4_F) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_411_p2 = ((tmp_2_fu_401_p4 == ap_const_lv4_F) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_510_p2 = ((tmp_15_fu_494_p4 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_603_p2 = ((tmp_24_fu_587_p4 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_417_p2 = ((tmp_2_fu_401_p4 == ap_const_lv4_0) ? 1'b1 : 1'b0);

always @ (*) begin
    ap_rst_n_control_inv = ~ap_rst_n_control;
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_293 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign brmerge1_fu_733_p2 = (neg_src_not_fu_715_p2 | p_39_demorgan_i464_not_fu_727_p2);

assign brmerge2_fu_809_p2 = (neg_src_6_not_fu_791_p2 | p_39_demorgan_i488_not_fu_803_p2);

assign brmerge_fu_657_p2 = (neg_src_5_not_fu_639_p2 | p_39_demorgan_i_not_fu_651_p2);

assign brmerge_i_i466_not_fu_721_p2 = (p_39_demorgan_i1_fu_705_p2 & neg_src_not_fu_715_p2);

assign brmerge_i_i490_not_fu_797_p2 = (p_39_demorgan_i2_fu_781_p2 & neg_src_6_not_fu_791_p2);

assign brmerge_i_i_not_fu_645_p2 = (p_39_demorgan_i_fu_629_p2 & neg_src_5_not_fu_639_p2);

assign carry_1_fu_488_p2 = (tmp_33_fu_460_p3 & tmp_14_fu_482_p2);

assign carry_2_fu_581_p2 = (tmp_37_fu_553_p3 & tmp_23_fu_575_p2);

assign carry_fu_395_p2 = (tmp_29_fu_367_p3 & tmp_5_fu_389_p2);

assign deleted_zeros_1_fu_685_p3 = ((carry_1_reg_1109[0:0] === 1'b1) ? Range1_all_ones_1_reg_1115 : Range1_all_zeros_1_reg_1121);

assign deleted_zeros_2_fu_761_p3 = ((carry_2_reg_1139[0:0] === 1'b1) ? Range1_all_ones_2_reg_1145 : Range1_all_zeros_2_reg_1151);

assign deleted_zeros_fu_609_p3 = ((carry_reg_1079[0:0] === 1'b1) ? Range1_all_ones_reg_1085 : Range1_all_zeros_reg_1091);

assign grp_fu_243_p0 = OP1_V_1_fu_237_p1;

assign grp_fu_252_p0 = OP1_V_1_fu_237_p1;

assign grp_fu_261_p0 = OP1_V_1_fu_237_p1;

assign grp_fu_848_p0 = OP1_V_2_fu_288_p1;

assign grp_fu_857_p0 = OP1_V_fu_267_p1;

assign grp_fu_865_p0 = OP1_V_fu_267_p1;

assign grp_fu_873_p0 = OP1_V_2_fu_288_p1;

assign grp_fu_882_p0 = OP1_V_2_fu_288_p1;

assign grp_fu_891_p0 = OP1_V_fu_267_p1;

assign loc_V_fu_213_p1 = in_data_TDATA[7:0];

assign neg_src_5_not_fu_639_p2 = (p_38_i_fu_614_p2 | signbit_not_fu_634_p2);

assign neg_src_6_fu_700_p2 = (signbit_1_reg_1096 & tmp_16_fu_694_p2);

assign neg_src_6_not_fu_791_p2 = (p_38_i2_fu_766_p2 | signbit_2_not_fu_786_p2);

assign neg_src_7_fu_776_p2 = (signbit_2_reg_1126 & tmp_25_fu_770_p2);

assign neg_src_fu_624_p2 = (signbit_reg_1066 & tmp_8_fu_618_p2);

assign neg_src_not_fu_715_p2 = (p_38_i1_fu_690_p2 | signbit_1_not_fu_710_p2);

assign out1_V_fu_677_p3 = ((brmerge_fu_657_p2[0:0] === 1'b1) ? p_mux_fu_663_p3 : p_s_fu_670_p3);

assign out2_V_fu_753_p3 = ((brmerge1_fu_733_p2[0:0] === 1'b1) ? p_mux1_fu_739_p3 : p_1_fu_746_p3);

assign out3_V_fu_829_p3 = ((brmerge2_fu_809_p2[0:0] === 1'b1) ? p_mux2_fu_815_p3 : p_2_fu_822_p3);

assign out_data_TDATA = {{{out3_V_fu_829_p3}, {out2_V_fu_753_p3}}, {out1_V_fu_677_p3}};

assign out_data_TLAST = ap_reg_ppstg_out_data_last_V_tmp_reg_904_pp0_iter6;

assign out_data_TUSER = ap_reg_ppstg_out_data_user_V_tmp_reg_899_pp0_iter6;

assign p_1_fu_746_p3 = ((neg_src_6_fu_700_p2[0:0] === 1'b1) ? ap_const_lv8_0 : p_Val2_15_reg_1103);

assign p_2_fu_822_p3 = ((neg_src_7_fu_776_p2[0:0] === 1'b1) ? ap_const_lv8_0 : p_Val2_23_reg_1133);

assign p_38_i1_fu_690_p2 = (carry_1_reg_1109 & Range1_all_ones_1_reg_1115);

assign p_38_i2_fu_766_p2 = (carry_2_reg_1139 & Range1_all_ones_2_reg_1145);

assign p_38_i_fu_614_p2 = (carry_reg_1079 & Range1_all_ones_reg_1085);

assign p_39_demorgan_i1_fu_705_p2 = (deleted_zeros_1_fu_685_p3 | signbit_1_reg_1096);

assign p_39_demorgan_i2_fu_781_p2 = (deleted_zeros_2_fu_761_p3 | signbit_2_reg_1126);

assign p_39_demorgan_i464_not_fu_727_p2 = (p_39_demorgan_i1_fu_705_p2 ^ 1'b1);

assign p_39_demorgan_i488_not_fu_803_p2 = (p_39_demorgan_i2_fu_781_p2 ^ 1'b1);

assign p_39_demorgan_i_fu_629_p2 = (deleted_zeros_fu_609_p3 | signbit_reg_1066);

assign p_39_demorgan_i_not_fu_651_p2 = (p_39_demorgan_i_fu_629_p2 ^ 1'b1);

assign p_Val2_13_fu_434_p2 = ($signed(p_Val2_12_reg_1046) + $signed(tmp_16_cast_fu_430_p1));

assign p_Val2_14_fu_447_p4 = {{p_Val2_13_fu_434_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign p_Val2_15_fu_468_p2 = (tmp_13_fu_457_p1 + p_Val2_14_fu_447_p4);

assign p_Val2_21_fu_527_p2 = ($signed(p_Val2_20_reg_1056) + $signed(tmp_27_cast_fu_523_p1));

assign p_Val2_22_fu_540_p4 = {{p_Val2_21_fu_527_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign p_Val2_23_fu_561_p2 = (tmp_22_fu_550_p1 + p_Val2_22_fu_540_p4);

assign p_Val2_5_fu_341_p2 = ($signed(p_Val2_4_reg_1036) + $signed(tmp_3_cast_fu_337_p1));

assign p_Val2_6_fu_354_p4 = {{p_Val2_5_fu_341_p2[ap_const_lv32_F : ap_const_lv32_8]}};

assign p_Val2_7_fu_375_p2 = (tmp_7_fu_364_p1 + p_Val2_6_fu_354_p4);

assign p_mux1_fu_739_p3 = ((brmerge_i_i466_not_fu_721_p2[0:0] === 1'b1) ? p_Val2_15_reg_1103 : ap_const_lv8_FF);

assign p_mux2_fu_815_p3 = ((brmerge_i_i490_not_fu_797_p2[0:0] === 1'b1) ? p_Val2_23_reg_1133 : ap_const_lv8_FF);

assign p_mux_fu_663_p3 = ((brmerge_i_i_not_fu_645_p2[0:0] === 1'b1) ? p_Val2_7_reg_1073 : ap_const_lv8_FF);

assign p_s_fu_670_p3 = ((neg_src_fu_624_p2[0:0] === 1'b1) ? ap_const_lv8_0 : p_Val2_7_reg_1073);

assign signbit_1_not_fu_710_p2 = (signbit_1_reg_1096 ^ 1'b1);

assign signbit_2_not_fu_786_p2 = (signbit_2_reg_1126 ^ 1'b1);

assign signbit_not_fu_634_p2 = (signbit_reg_1066 ^ 1'b1);

assign tmp_12_fu_423_p3 = {{ap_reg_ppstg_bias_c2_V_read_reg_929_pp0_iter5}, {ap_const_lv8_0}};

assign tmp_13_fu_457_p1 = tmp_32_reg_1051;

assign tmp_14_fu_482_p2 = (tmp_34_fu_474_p3 ^ 1'b1);

assign tmp_15_fu_494_p4 = {{p_Val2_13_fu_434_p2[ap_const_lv32_13 : ap_const_lv32_10]}};

assign tmp_16_cast_fu_430_p1 = $signed(tmp_12_fu_423_p3);

assign tmp_16_fu_694_p2 = (p_38_i1_fu_690_p2 ^ 1'b1);

assign tmp_21_fu_516_p3 = {{ap_reg_ppstg_bias_c3_V_read_reg_924_pp0_iter5}, {ap_const_lv8_0}};

assign tmp_22_fu_550_p1 = tmp_36_reg_1061;

assign tmp_23_fu_575_p2 = (tmp_38_fu_567_p3 ^ 1'b1);

assign tmp_24_fu_587_p4 = {{p_Val2_21_fu_527_p2[ap_const_lv32_13 : ap_const_lv32_10]}};

assign tmp_25_fu_770_p2 = (p_38_i2_fu_766_p2 ^ 1'b1);

assign tmp_27_cast_fu_523_p1 = $signed(tmp_21_fu_516_p3);

assign tmp_29_fu_367_p3 = p_Val2_5_fu_341_p2[ap_const_lv32_F];

assign tmp_2_fu_401_p4 = {{p_Val2_5_fu_341_p2[ap_const_lv32_13 : ap_const_lv32_10]}};

assign tmp_30_fu_381_p3 = p_Val2_7_fu_375_p2[ap_const_lv32_7];

assign tmp_33_fu_460_p3 = p_Val2_13_fu_434_p2[ap_const_lv32_F];

assign tmp_34_fu_474_p3 = p_Val2_15_fu_468_p2[ap_const_lv32_7];

assign tmp_37_fu_553_p3 = p_Val2_21_fu_527_p2[ap_const_lv32_F];

assign tmp_38_fu_567_p3 = p_Val2_23_fu_561_p2[ap_const_lv32_7];

assign tmp_3_cast_fu_337_p1 = $signed(tmp_3_fu_330_p3);

assign tmp_3_fu_330_p3 = {{ap_reg_ppstg_bias_c1_V_read_reg_934_pp0_iter5}, {ap_const_lv8_0}};

assign tmp_5_fu_389_p2 = (tmp_30_fu_381_p3 ^ 1'b1);

assign tmp_7_fu_364_p1 = tmp_28_reg_1041;

assign tmp_8_fu_618_p2 = (p_38_i_fu_614_p2 ^ 1'b1);

endmodule //color_convert
